plugins {
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
    id "io.qameta.allure" version "2.12.0"

}

repositories {
    mavenCentral()
}

def slf4jVersion = "1.7.32",
    allureVersion = "2.33.0"

allure {
    version.set(allureVersion)
    autoconfigure = true
    report {
        version.set(allureVersion)
    }
    adapter{
        aspectjWeaver.set(true)
        frameworks{
            jUnit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.5.1",
            'io.appium:java-client:8.3.0',
            "org.junit.jupiter:junit-jupiter:5.9.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.qameta.allure:allure-junit5:2.29.1",
            'org.projectlombok:lombok:1.18.30',
            "org.assertj:assertj-core:3.27.3",
            "org.freemarker:freemarker:2.3.34",
            "com.codeborne:selenide:6.19.1",
            "org.seleniumhq.selenium:selenium-java:4.30.0",
            "io.qameta.allure:allure-selenide:2.29.1"
    )
    annotationProcessor("org.projectlombok:lombok:1.18.30")
    compileOnly("org.projectlombok:lombok:1.18.30")
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
sourceSets {
    test {
        resources.srcDirs = ["src/test/resources"]
    }
}
